// <auto-generated />
using System;
using EmployeeService.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EmployeeService.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231115181345_psqlMigration")]
    partial class psqlMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EmployeeService.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Произодственный"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Финансовый"
                        });
                });

            modelBuilder.Entity("EmployeeService.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOfEmployment")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("integer");

                    b.Property<int>("PersonId")
                        .HasColumnType("integer");

                    b.Property<int>("PositionId")
                        .HasColumnType("integer");

                    b.Property<double>("TariffRate")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.HasIndex("PositionId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfEmployment = new DateTime(2020, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            PersonId = 1,
                            PositionId = 1,
                            TariffRate = 35000.0
                        },
                        new
                        {
                            Id = 2,
                            DateOfEmployment = new DateTime(2021, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            PersonId = 2,
                            PositionId = 2,
                            TariffRate = 31000.0
                        },
                        new
                        {
                            Id = 3,
                            DateOfEmployment = new DateTime(2022, 2, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            PersonId = 3,
                            PositionId = 1,
                            TariffRate = 32000.0
                        },
                        new
                        {
                            Id = 4,
                            DateOfEmployment = new DateTime(2019, 7, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 2,
                            PersonId = 6,
                            PositionId = 4,
                            TariffRate = 34000.0
                        },
                        new
                        {
                            Id = 5,
                            DateOfEmployment = new DateTime(2022, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 2,
                            PersonId = 5,
                            PositionId = 4,
                            TariffRate = 35000.0
                        },
                        new
                        {
                            Id = 6,
                            DateOfEmployment = new DateTime(2021, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            PersonId = 4,
                            PositionId = 3,
                            TariffRate = 37000.0
                        });
                });

            modelBuilder.Entity("EmployeeService.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(1987, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Firstname = "Михаил",
                            Lastname = "Соколов",
                            Surname = "Викторович"
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(1999, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Firstname = "Геннадий ",
                            Lastname = "Овчинников ",
                            Surname = "Рубенович"
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = new DateTime(1996, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Firstname = "Илья ",
                            Lastname = "Голубев ",
                            Surname = "Натанович"
                        },
                        new
                        {
                            Id = 4,
                            DateOfBirth = new DateTime(1977, 5, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Firstname = "Михаил",
                            Lastname = "Фролов"
                        },
                        new
                        {
                            Id = 5,
                            DateOfBirth = new DateTime(1979, 9, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Firstname = "Владлена",
                            Lastname = "Богданова",
                            Surname = "Олеговна"
                        },
                        new
                        {
                            Id = 6,
                            DateOfBirth = new DateTime(1997, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Firstname = "Алевтина",
                            Lastname = "Пономарёва",
                            Surname = "Альбертовна"
                        });
                });

            modelBuilder.Entity("EmployeeService.Models.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("SurplusFactor")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Positions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Инженер",
                            SurplusFactor = 1.2
                        },
                        new
                        {
                            Id = 2,
                            Name = "Младший инженер",
                            SurplusFactor = 1.0
                        },
                        new
                        {
                            Id = 3,
                            Name = "Главный инженер",
                            SurplusFactor = 1.5
                        },
                        new
                        {
                            Id = 4,
                            Name = "Бухгалтер",
                            SurplusFactor = 1.0
                        });
                });

            modelBuilder.Entity("EmployeeService.Models.Employee", b =>
                {
                    b.HasOne("EmployeeService.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmployeeService.Models.Person", "Person")
                        .WithOne("Employee")
                        .HasForeignKey("EmployeeService.Models.Employee", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmployeeService.Models.Position", "Position")
                        .WithMany("Employees")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Person");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("EmployeeService.Models.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("EmployeeService.Models.Person", b =>
                {
                    b.Navigation("Employee")
                        .IsRequired();
                });

            modelBuilder.Entity("EmployeeService.Models.Position", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
